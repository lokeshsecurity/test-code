/* 29 TABLE AND 12 VIEW 
***********************************************************************************
GBS - DDL Script */
-----------------------------------------------------------------------------------------Tables----------------------------------------------------------------------------------------
CREATE SCHEMA IF NOT EXISTS GBS;

CREATE SEQUENCE GBS.ATTACHMENT_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.ATTACHMENT_TYPE  ( 
	ATTACHMENT_TYPE_ID  	INTEGER DEFAULT NEXTVAL ('GBS.ATTACHMENT_TYPE_seq') NOT NULL,
	ATTACHMENT_TYPE_NAME	VARCHAR(250),
	CREATED_BY          	INTEGER,
	CREATED_ON          	TIMESTAMP,
	UPDATED_BY          	INTEGER,
	UPDATED_ON          	TIMESTAMP,
	DISPLAY_SEQUENCE    	INTEGER,
	SHOW_FIELDS         	SMALLINT,
	FUNCTION_USED       	VARCHAR(100),
	CONSTRAINT ATTACHMENT_TYPE_ID PRIMARY KEY(ATTACHMENT_TYPE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.ATTACHMENT_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.ATTACHMENT  ( 
	ATTACHMENT_ID             	INTEGER DEFAULT NEXTVAL ('GBS.ATTACHMENT_seq') NOT NULL,
	DECREE_ID                 	INTEGER,
	ATTACHMENT_NAME           	VARCHAR(255) NOT NULL,
	ATTACHMENT_NAME_NORMALIZED	VARCHAR(255),
	ATTACHMENT_MIME           	VARCHAR(255),
	ATTACHMENT_SIZE           	INTEGER,
	CREATED_BY                	VARCHAR(255),
	CREATED_ON                	TIMESTAMP,
	UPDATED_BY                	VARCHAR(255),
	UPDATED_ON                	TIMESTAMP,
	ATTACHMENT_TYPE_ID        	INTEGER,
	BOARD_ID                  	INTEGER,
	CONSTRAINT SQL160907112851990 PRIMARY KEY(ATTACHMENT_ID)
);

CREATE INDEX ATTACH_BOARD_ID_IDX ON GBS.ATTACHMENT(BOARD_ID, ATTACHMENT_TYPE_ID);

CREATE INDEX ATTACH_DECREE_ID_IDX ON GBS.ATTACHMENT(DECREE_ID, ATTACHMENT_TYPE_ID);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.BOARD_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.BOARD_TYPE  ( 
	BOARD_TYPE_ID            	INTEGER DEFAULT NEXTVAL ('GBS.BOARD_TYPE_seq') NOT NULL,
	BOARD_TYPE_NAME          	VARCHAR(500) NOT NULL,
	BOARD_TYPE_NAME_NORMALIZE	VARCHAR(500),
	CREATED_BY               	INTEGER,
	CREATED_ON               	TIMESTAMP,
	UPDATED_BY               	INTEGER,
	UPDATED_ON               	TIMESTAMP,
	HAVE_EXPIRY_DATE         	SMALLINT,
	DISPLAY_SEQUENCE         	INTEGER,
	REQUIRED_LEGISLATIVE_TOOL	SMALLINT,
	GOVERNMENT_BOARD_TYPE_ID 	INTEGER,
	CONSTRAINT ATTACHMENT_ID PRIMARY KEY(BOARD_TYPE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.BOARD_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.BOARD  ( 
	BOARD_ID              	INTEGER DEFAULT NEXTVAL ('GBS.BOARD_seq') NOT NULL,
	BOARD_NAME            	VARCHAR(255) NOT NULL,
	BOARD_NAME_NORMALIZED 	VARCHAR(255),
	STATUS_ID             	INTEGER,
	SOURCE_ORGANIZATION_ID	INTEGER,
	BOARD_START_DATE      	TIMESTAMP,
	BOARD_EXPIRY_DATE     	TIMESTAMP,
	BOARD_TYPE_ID         	INTEGER,
	PARENT_BOARD_ID       	INTEGER,
	CREATED_BY            	VARCHAR(255),
	CREATED_ON            	TIMESTAMP,
	UPDATED_BY            	VARCHAR(255),
	UPDATED_ON            	TIMESTAMP,
	NOTIFICATION_BEFORE   	INTEGER,
	NOTIFICATION_EVERY    	INTEGER, 
	CONSTRAINT BOARD_ID PRIMARY KEY(BOARD_ID)
	);

CREATE INDEX BOARD_START_END_DATE_IDX ON GBS.BOARD(BOARD_START_DATE, BOARD_EXPIRY_DATE);
CREATE INDEX BOARD_NAME_NORMALIZE_IDX ON GBS.BOARD(BOARD_NAME);
CREATE INDEX BOARD_NAME_BOARD_TYPE_IDX ON GBS.BOARD(BOARD_NAME_NORMALIZED, BOARD_TYPE_ID);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.DECREE_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.DECREE_TYPE  ( 
	DECREE_TYPE_ID             	INTEGER DEFAULT NEXTVAL ('GBS.DECREE_TYPE_seq') NOT NULL,
	DECREE_TYPE_NAME           	VARCHAR(255),
	DECREE_TYPE_NAME_NORMALIZED	VARCHAR(255),
	CREATED_BY                 	INTEGER,
	CREATED_ON                 	TIMESTAMP,
	UPDATED_BY                 	INTEGER,
	UPDATED_ON                 	TIMESTAMP,
	DISPLAY_SEQUENCE           	INTEGER,
	CONSTRAINT DECREE_TYPE_ID PRIMARY KEY(DECREE_TYPE_ID)
);

CREATE INDEX DECREETYPENAMEINDEX ON GBS.DECREE_TYPE(DECREE_TYPE_NAME_NORMALIZED);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.DECREE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.DECREE  ( 
	DECREE_ID                   	INTEGER DEFAULT NEXTVAL ('GBS.DECREE_seq') NOT NULL,
	DECREE_NUMBER               	INTEGER NOT NULL,
	DECREE_YEAR                 	INTEGER,
	DECREE_DESCRIPTION          	VARCHAR(1000),
	CREATED_BY                  	VARCHAR(255),
	CREATED_ON                  	TIMESTAMP,
	UPDATED_BY                  	VARCHAR(255),
	UPDATED_ON                  	TIMESTAMP,
	DECREE_DESCRIPTION_NORMALIZE	VARCHAR(255),
	DECREE_TYPE_ID              	INTEGER,
	ISSUE_DATE_MELADY           	DATE,
	ISSUE_DATE_HIGRY            	VARCHAR(250),
	CONSTRAINT SQL160907112949470 PRIMARY KEY(DECREE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.BOARD_DECREE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.BOARD_DECREE  ( 
	BOARD_DECREE_ID	INTEGER DEFAULT NEXTVAL ('GBS.BOARD_DECREE_seq') NOT NULL,
	BOARD_ID       	INTEGER,
	DECREE_ID      	INTEGER,
	CONSTRAINT SQL160619133423280 PRIMARY KEY(BOARD_DECREE_ID)
);

/************************************************************************************************************************/


CREATE SEQUENCE GBS.BOARD_DESTINATION_ORGANIZATION_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.BOARD_DESTINATION_ORGANIZATION  ( 
	BOARD_ORGANIZATION_ID      	INTEGER DEFAULT NEXTVAL ('GBS.BOARD_DESTINATION_ORGANIZATION_seq') NOT NULL,
	BOARD_ID                   	INTEGER,
	DESTINATION_ORGANIZATION_ID	INTEGER,
	PRIMARY_ORGANIZATION       	SMALLINT,
	CONSTRAINT SQL160831141015230 PRIMARY KEY(BOARD_ORGANIZATION_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.BOARD_HISTORY_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.BOARD_HISTORY  ( 
	BOARD_HISTORY_ID            	INTEGER DEFAULT NEXTVAL ('GBS.BOARD_HISTORY_seq') NOT NULL,
	BOARD_ID                    	INTEGER,
	BOARD_NAME                  	VARCHAR(500),
	BOARD_TYPE_ID               	INTEGER,
	DECREE_LIST                 	VARCHAR(1000),
	PARENT_BOARD_ID             	INTEGER,
	SOURCE_ORGANIZATION_ID      	INTEGER,
	DESTINATION_ORGANIZATION_IDS	VARCHAR(1000),
	CREATED_ON                  	TIMESTAMP,
	CREATED_BY                  	VARCHAR(500),
	BOARD_START_DATE            	TIMESTAMP,
	BOARD_EXPIRY_DATE           	TIMESTAMP,
	STATUS                      	VARCHAR(500),
	MEMBER_LIST                 	VARCHAR(4000),
	ACTION_OPERATION            	VARCHAR(25),
	BOARD_STATUS_ID             	INTEGER,
	NOTIFICATION_BEFORE         	INTEGER,
	NOTIFICATION_EVERY          	INTEGER,
	CONSTRAINT SQL160908133742180 PRIMARY KEY(BOARD_HISTORY_ID)
);

/************************************************************************************************************************/


CREATE SEQUENCE GBS.GOVERNMENT_BOARD_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.GOVERNMENT_BOARD_TYPE  ( 
	GOVERNMENT_BOARD_TYPE_ID  	INTEGER DEFAULT NEXTVAL ('GBS.GOVERNMENT_BOARD_TYPE_seq') NOT NULL,
	GOVERNMENT_BOARD_TYPE_NAME	VARCHAR(500),
	CREATED_BY                	INTEGER,
	CREATED_ON                	DATE,
	UPDATED_BY                	INTEGER,
	UPDATED_ON                	DATE,
	CONSTRAINT GOVERNMENT_BOARD_TYPE_ID PRIMARY KEY(GOVERNMENT_BOARD_TYPE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.GROUP_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.GROUP  ( 
	GROUP_ID             	INTEGER DEFAULT NEXTVAL ('GBS.GROUP_seq') NOT NULL,
	GROUP_NAME           	VARCHAR(255) NOT NULL,
	GROUP_NAME_NORMALIZED	VARCHAR(255),
	CREATED_BY           	INTEGER,
	CREATED_ON           	TIMESTAMP,
	UPDATED_BY           	INTEGER,
	UPDATED_ON           	TIMESTAMP,
	CONSTRAINT SQL160619133936590 PRIMARY KEY(GROUP_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.SYSTEM_ROLE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.SYSTEM_ROLE  ( 
	SYSTEM_ROLE_ID  	INTEGER DEFAULT NEXTVAL ('GBS.SYSTEM_ROLE_seq') NOT NULL,
	SYSTEM_ROLE_NAME	VARCHAR(255) NOT NULL,
	CREATED_BY      	INTEGER,
	CREATED_ON      	TIMESTAMP,
	UPDATED_BY      	INTEGER,
	UPDATED_ON      	TIMESTAMP,
	CONSTRAINT SQL160619134032870 PRIMARY KEY(SYSTEM_ROLE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.GROUP_SYSTEM_ROLE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.GROUP_SYSTEM_ROLE ( 
    GROUP_SYSTEM_ROLE_ID	INTEGER DEFAULT NEXTVAL ('GBS.GROUP_SYSTEM_ROLE_seq') NOT NULL,
    GROUP_ID            	INTEGER,
    SYSTEM_ROLE_ID      	INTEGER,
    PRIMARY KEY(GROUP_SYSTEM_ROLE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.LOGIN_HISTORY_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.LOGIN_HISTORY  ( 
	LOGIN_HISTORY_ID	INTEGER DEFAULT NEXTVAL ('GBS.LOGIN_HISTORY_seq') NOT NULL,
	USER_NAME       	VARCHAR(250) NOT NULL,
	SESSION_ID      	VARCHAR(250),
	LOGIN_STATUS    	VARCHAR(25) NOT NULL,
	LOGIN_DATE      	TIMESTAMP,
	LOGOUT_DATE     	TIMESTAMP,
	ACTION          	VARCHAR(100),
	CONSTRAINT LOGIN_HISTORY_ID PRIMARY KEY(LOGIN_HISTORY_ID)
);


CREATE INDEX LOGIN_USER_SESSION ON GBS.LOGIN_HISTORY(USER_NAME, SESSION_ID);

CREATE INDEX LOGIN_USER_NAME ON GBS.LOGIN_HISTORY(USER_NAME);

CREATE INDEX LOGIN_USER_ACTION ON GBS.LOGIN_HISTORY(USER_NAME, ACTION);
	
CREATE INDEX USER_LOGIN_LOGOUT_DATE ON GBS.LOGIN_HISTORY(USER_NAME, LOGIN_DATE, LOGOUT_DATE);
	
/************************************************************************************************************************/
CREATE SEQUENCE GBS.MEMBER_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.MEMBER  ( 
	MEMBER_ID                  	INTEGER DEFAULT NEXTVAL ('GBS.MEMBER_seq') NOT NULL,
	BOARD_ID                   	INTEGER,
	CPR_NUMBER                 	INTEGER,
	STATUS_ID                  	INTEGER,
	ROLE_ID                    	INTEGER,
	MEMBER_NAME                	VARCHAR(255) NOT NULL,
	MEMBER_NAME_NORMALIZED     	VARCHAR(255),
	MEMBER_OCCUPATION          	VARCHAR(255),
	MEMBER_OCCUPATION_NORMLIZED	VARCHAR(255),
	ORGANIZATION_ID            	INTEGER,
	ORGANIZATION_ON_BEHALF_ID  	INTEGER,
	MEMBER_START_DATE          	TIMESTAMP,
	MEMBER_END_DATE            	TIMESTAMP,
	CREATED_BY                 	VARCHAR(255),
	CREATED_ON                 	TIMESTAMP,
	UPDATED_BY                 	VARCHAR(255),
	UPDATED_ON                 	TIMESTAMP,
	CONSTRAINT SQL160907113027410 PRIMARY KEY(MEMBER_ID)
);
/************************************************************************************************************************/

CREATE SEQUENCE GBS.MEMBER_DECREE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.MEMBER_DECREE  ( 
	MEMBER_DECREE_ID	INTEGER DEFAULT NEXTVAL ('GBS.MEMBER_DECREE_seq') NOT NULL,
	MEMBER_ID       	INTEGER,
	DECREE_ID       	INTEGER,
	CONSTRAINT SQL160831142127790 PRIMARY KEY(MEMBER_DECREE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.MEMBER_HISTORY_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.MEMBER_HISTORY  ( 
	MEMBER_HISTORY_ID        	INTEGER DEFAULT NEXTVAL ('GBS.MEMBER_HISTORY_seq') NOT NULL,
	MEMBER_ID                	INTEGER,
	MEMBER_NAME              	VARCHAR(1000),
	CPR_NUMBER               	INTEGER,
	MEMBER_OCCUPATION        	VARCHAR(500),
	ORGANIZATION_ID          	INTEGER,
	ROLE_ID                  	INTEGER,
	ORGANIZATION_ON_BEHALF_ID	INTEGER,
	CREATED_BY               	VARCHAR(500),
	CREATED_ON               	TIMESTAMP,
	MEMBER_START_DATE        	TIMESTAMP,
	MEMBER_END_DATE          	TIMESTAMP,
	BOARD_ID                 	INTEGER,
	BOARD_NAME               	VARCHAR(500),
	BOARD_TYPE_ID            	INTEGER,
	BOARD_TYPE_NAME          	VARCHAR(500),
	BOARD_EXPIRY_DATE        	TIMESTAMP,
	BOARD_START_DATE         	TIMESTAMP,
	DECREE_LIST              	VARCHAR(1000),
	PARENT_BOARD_ID          	INTEGER,
	MEMBER_STATUS_ID         	INTEGER,
	STATUS                   	VARCHAR(1000),
	ACTION_OPERATION         	VARCHAR(25),
	CONSTRAINT MEMBER_HISTORY_ID PRIMARY KEY(MEMBER_HISTORY_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.NOTIFICATION_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.NOTIFICATION  ( 
	NOTIFICATION_ID  	INTEGER DEFAULT NEXTVAL ('GBS.NOTIFICATION_seq') NOT NULL,
	BOARD_ID         	INTEGER NOT NULL,
	ACTUAL_DATE      	TIMESTAMP,
	REPEAT_EVERY     	INTEGER,
	LAST_RUN_DATE    	TIMESTAMP,
	NOTIFICATION_DATE	TIMESTAMP,
	CREATED_BY       	VARCHAR(255),
	CREATED_ON       	TIMESTAMP,
	UPDATED_BY       	VARCHAR(255),
	UPDATED_ON       	TIMESTAMP,
	CONSTRAINT SQL160915143818080 PRIMARY KEY(NOTIFICATION_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.NOTIFICATION_HISTORY_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.NOTIFICATION_HISTORY  ( 
	NOTIFICATION_HISTORY_ID	INTEGER DEFAULT NEXTVAL ('GBS.NOTIFICATION_HISTORY_seq') NOT NULL,
	NOTIFICATION_ID        	INTEGER NOT NULL,
	STATUS                 	VARCHAR(250),
	RUN_DATE               	DATE,
	DESCRIPTION            	VARCHAR(1000),
	JOB_RUNNABLE_TYPE      	VARCHAR(250),
	CREATED_BY             	VARCHAR(250),
	CREATED_ON             	DATE,
	UPDATED_BY             	VARCHAR(250),
	UPDATED_ON             	DATE,
	CONSTRAINT NOTIFICATION_HISTORY_ID PRIMARY KEY(NOTIFICATION_HISTORY_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.NOTIFICATION_PERIOD_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.NOTIFICATION_PERIOD  ( 
	NOTIFICATION_PERIOD_ID  	INTEGER DEFAULT NEXTVAL ('GBS.NOTIFICATION_PERIOD_seq') NOT NULL,
	NOTIFICATION_PERIOD_NAME	VARCHAR(250) NOT NULL,
	NOTIFICATION_PERIOD_DAY 	VARCHAR(250) NOT NULL,
	CREATED_BY              	INTEGER,
	CREATED_ON              	DATE,
	UPDATED_BY              	INTEGER,
	UPDATED_ON              	DATE,
	DISPLAYSEQUENCE         	INTEGER,
	CONSTRAINT NOTIFICATION_PERIOD_ID PRIMARY KEY(NOTIFICATION_PERIOD_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.NOTIFICATION_REPEAT_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.NOTIFICATION_REPEAT  ( 
	NOTIFICATION_REPEAT_ID      	INTEGER DEFAULT NEXTVAL ('GBS.NOTIFICATION_REPEAT_seq') NOT NULL,
	NOTIFICATION_PERIOD_ID      	INTEGER,
	NOTIFICATION_PERIOD_CHILD_ID	INTEGER,
	CONSTRAINT NOTIFICATION_REPEAT_ID PRIMARY KEY(NOTIFICATION_REPEAT_ID)
);

/************************************************************************************************************************/
CREATE SEQUENCE GBS.ORGANZIATION_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.ORGANZIATION_TYPE  ( 
	ORGANIZATION_TYPE_ID         	INTEGER DEFAULT NEXTVAL ('GBS.ORGANZIATION_TYPE_seq') NOT NULL,
	ORGANIZATION_TYPE_NAME       	VARCHAR(100) NOT NULL,
	ORGANIZATION_TYPE_DESCRIPTION	VARCHAR(250),
	CREATED_BY                   	INTEGER,
	CREATED_ON                   	TIMESTAMP,
	UPDATED_BY                   	INTEGER,
	UPDATED_ON                   	TIMESTAMP,
	CONSTRAINT ORG_TYPE_ID PRIMARY KEY(ORGANIZATION_TYPE_ID)
);
/************************************************************************************************************************/

CREATE SEQUENCE GBS.ORGANIZATION_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.ORGANIZATION  ( 
	ORGANIZATION_ID             	INTEGER DEFAULT NEXTVAL ('GBS.ORGANIZATION_seq') NOT NULL,
	ORGANIZATION_NAME           	VARCHAR(255) NOT NULL,
	ORGANIZATION_NAME_NORMALIZED	VARCHAR(255),
	CREATED_BY                  	INTEGER,
	CREATED_ON                  	TIMESTAMP,
	UPDATED_BY                  	INTEGER,
	UPDATED_ON                  	TIMESTAMP,
	ORGANIZATION_TYPE_ID        	INTEGER,
	CONSTRAINT SQL160619115326650 PRIMARY KEY(ORGANIZATION_ID)
);

CREATE INDEX ORGNAMEINDEX
	ON GBS.ORGANIZATION(ORGANIZATION_NAME_NORMALIZED);
	
CREATE INDEX ORG_TYPR
	ON GBS.ORGANIZATION(ORGANIZATION_TYPE_ID);
	
/************************************************************************************************************************/

CREATE SEQUENCE GBS.ROLE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.ROLE  ( 
	ROLE_ID          	INTEGER DEFAULT NEXTVAL ('GBS.ROLE_seq') NOT NULL,
	ROLE_NAME        	VARCHAR(255) NOT NULL,
	ROLE_NORMALIZED  	VARCHAR(255),
	CREATED_BY       	INTEGER,
	CREATED_ON       	TIMESTAMP,
	UPDATED_BY       	INTEGER,
	UPDATED_ON       	TIMESTAMP,
	ROLE_NAME_ENGLISH	VARCHAR(250),
	COUNT_VALID      	VARCHAR(100),
	DISPLAY_SEQUENCE 	INTEGER,
	CONSTRAINT SQL160619120034060 PRIMARY KEY(ROLE_ID)
);

CREATE INDEX ROLENAMEINDEX ON GBS.ROLE(ROLE_NORMALIZED);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.STATUS_TYPE_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.STATUS_TYPE  ( 
	STATUS_TYPE_ID  	INTEGER DEFAULT NEXTVAL ('GBS.STATUS_TYPE_seq') NOT NULL,
	STATUS_TYPE_NAME	VARCHAR(250),
	CREATED_BY      	INTEGER,
	CREATED_ON      	DATE,
	UPDATED_BY      	INTEGER,
	UPDATED_ON      	DATE,
	CONSTRAINT STATUS_TYPE_ID PRIMARY KEY(STATUS_TYPE_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.STATUS_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.STATUS  ( 
	STATUS_ID      	INTEGER DEFAULT NEXTVAL ('GBS.STATUS_seq') NOT NULL,
	STATUS_NAME    	VARCHAR(255) NOT NULL,
	CREATED_BY     	INTEGER,
	CREATED_ON     	TIMESTAMP,
	UPDATED_BY     	INTEGER,
	UPDATED_ON     	TIMESTAMP,
	STATUS_TYPE_ID 	INTEGER,
	STATUS_NAME_KEY	VARCHAR(255),
	CONSTRAINT SQL160619114406610 PRIMARY KEY(STATUS_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.SUBSCRIBER_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.SUBSCRIBER  ( 
	SUBSCRIBER_ID   	INTEGER DEFAULT NEXTVAL ('GBS.SUBSCRIBER_seq') NOT NULL,
	SUBSCRIBER_EMAIL	VARCHAR(500),
	NOTIFICATION_ID 	INTEGER NOT NULL,
	CREATED_BY      	VARCHAR(500),
	CREATED_ON      	TIMESTAMP,
	UPDATED_BY      	VARCHAR(500),
	UPDATED_ON      	TIMESTAMP,
	CONSTRAINT SQL160814101214940 PRIMARY KEY(SUBSCRIBER_ID)
);

/************************************************************************************************************************/

CREATE SEQUENCE GBS.USER_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.USER  ( 
	USER_ID       	INTEGER DEFAULT NEXTVAL ('GBS.USER_seq') NOT NULL,
	USER_NAME     	VARCHAR(255) NOT NULL,
	PASSWORD      	VARCHAR(255),
	EMAIL         	VARCHAR(256) NOT NULL,
	ORGNIZATION_ID	INTEGER,
	CREATED_BY    	INTEGER,
	CREATED_ON    	TIMESTAMP,
	UPDATED_BY    	INTEGER,
	UPDATED_ON    	TIMESTAMP,
	ENABLE        	SMALLINT DEFAULT 1 NOT NULL,
	CONSTRAINT SQL160619133747290 PRIMARY KEY(USER_ID)
);

/************************************************************************************************************************/
CREATE SEQUENCE GBS.USER_GROUP_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE GBS.USER_GROUP  ( 
	USER_GROUP_ID	INTEGER DEFAULT NEXTVAL ('GBS.USER_GROUP_seq') NOT NULL,
	USER_ID      	INTEGER,
	GROUP_ID     	INTEGER,
	CONSTRAINT USER_GROUP_ID PRIMARY KEY(USER_GROUP_ID)
);
/************************************************************************************************************************/
ALTER TABLE GBS.ATTACHMENT
	ADD CONSTRAINT DECREE_ID
	FOREIGN KEY(DECREE_ID)
	REFERENCES GBS.DECREE(DECREE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.ATTACHMENT
	ADD CONSTRAINT BOARD_ID
	FOREIGN KEY(BOARD_ID)
	REFERENCES GBS.BOARD(BOARD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.ATTACHMENT
	ADD CONSTRAINT ATTACHMENT_TYPE_ID
	FOREIGN KEY(ATTACHMENT_TYPE_ID)
	REFERENCES GBS.ATTACHMENT_TYPE(ATTACHMENT_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD_TYPE
	ADD CONSTRAINT GOVERNMENT_BOARD_TYPE_ID
	FOREIGN KEY(GOVERNMENT_BOARD_TYPE_ID)
	REFERENCES GBS.GOVERNMENT_BOARD_TYPE(GOVERNMENT_BOARD_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD
	ADD CONSTRAINT SOURCE_ORG_ID
	FOREIGN KEY(SOURCE_ORGANIZATION_ID)
	REFERENCES GBS.ORGANIZATION(ORGANIZATION_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD
	ADD CONSTRAINT BOARD_TYPE_ID
	FOREIGN KEY(BOARD_TYPE_ID)
	REFERENCES GBS.BOARD_TYPE(BOARD_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.DECREE
	ADD CONSTRAINT DECREE_TYPE_ID
	FOREIGN KEY(DECREE_TYPE_ID)
	REFERENCES GBS.DECREE_TYPE(DECREE_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD_DECREE
	ADD CONSTRAINT DECREE_ID
	FOREIGN KEY(DECREE_ID)
	REFERENCES GBS.DECREE(DECREE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD_DECREE
	ADD CONSTRAINT BOARD_ID
	FOREIGN KEY(BOARD_ID)
	REFERENCES GBS.BOARD(BOARD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD_DESTINATION_ORGANIZATION
	ADD CONSTRAINT DEST_ORG_ID
	FOREIGN KEY(DESTINATION_ORGANIZATION_ID)
	REFERENCES GBS.ORGANIZATION(ORGANIZATION_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.BOARD_DESTINATION_ORGANIZATION
	ADD CONSTRAINT BOARD_ID
	FOREIGN KEY(BOARD_ID)
	REFERENCES GBS.BOARD(BOARD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.GROUP_SYSTEM_ROLE
    ADD CONSTRAINT SYSTEM_ROLE_ID
	FOREIGN KEY(SYSTEM_ROLE_ID)
	REFERENCES GBS.SYSTEM_ROLE(SYSTEM_ROLE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.GROUP_SYSTEM_ROLE
    ADD CONSTRAINT GROUP_ID
	FOREIGN KEY(GROUP_ID)
	REFERENCES GBS.GROUP(GROUP_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER
	ADD CONSTRAINT STATUS_ID
	FOREIGN KEY(STATUS_ID)
	REFERENCES GBS.STATUS(STATUS_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER
	ADD CONSTRAINT ROLE_ID
	FOREIGN KEY(ROLE_ID)
	REFERENCES GBS.ROLE(ROLE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER
	ADD CONSTRAINT ORGANIZATION_ON_BEHALF_ID
	FOREIGN KEY(ORGANIZATION_ON_BEHALF_ID)
	REFERENCES GBS.ORGANIZATION(ORGANIZATION_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER
	ADD CONSTRAINT ORGANIZATION_ID
	FOREIGN KEY(ORGANIZATION_ID)
	REFERENCES GBS.ORGANIZATION(ORGANIZATION_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER
	ADD CONSTRAINT BOARD_ID
	FOREIGN KEY(BOARD_ID)
	REFERENCES GBS.BOARD(BOARD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER_DECREE
	ADD CONSTRAINT MEMBER_ID
	FOREIGN KEY(MEMBER_ID)
	REFERENCES GBS.MEMBER(MEMBER_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.MEMBER_DECREE
	ADD CONSTRAINT DECREE_ID
	FOREIGN KEY(DECREE_ID)
	REFERENCES GBS.DECREE(DECREE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.NOTIFICATION_REPEAT
	ADD CONSTRAINT NOTIFICATION_PERIOD_ID
	FOREIGN KEY(NOTIFICATION_PERIOD_ID)
	REFERENCES GBS.NOTIFICATION_PERIOD(NOTIFICATION_PERIOD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.NOTIFICATION_REPEAT
	ADD CONSTRAINT NOTIFICATION_PERIOD_CHILD_ID
	FOREIGN KEY(NOTIFICATION_PERIOD_CHILD_ID)
	REFERENCES GBS.NOTIFICATION_PERIOD(NOTIFICATION_PERIOD_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.ORGANIZATION
	ADD CONSTRAINT ORGANIZATION_TYPE_ID
	FOREIGN KEY(ORGANIZATION_TYPE_ID)
	REFERENCES GBS.ORGANZIATION_TYPE(ORGANIZATION_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.STATUS
	ADD CONSTRAINT STATUS_TYPE_ID
	FOREIGN KEY(STATUS_TYPE_ID)
	REFERENCES GBS.STATUS_TYPE(STATUS_TYPE_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.USER
	ADD CONSTRAINT ORGNIZATION_ID
	FOREIGN KEY(ORGNIZATION_ID)
	REFERENCES GBS.ORGANIZATION(ORGANIZATION_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

ALTER TABLE GBS.USER_GROUP
	ADD CONSTRAINT USER_ID
	FOREIGN KEY(USER_ID)
	REFERENCES GBS.USER(USER_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION  ;

ALTER TABLE GBS.USER_GROUP
	ADD CONSTRAINT GROUP_ID
	FOREIGN KEY(GROUP_ID)
	REFERENCES GBS.GROUP(GROUP_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;
/************************************************************** MILESTONE 3 Updates *************************************************/

ALTER TABLE GBS.MEMBER ADD NOTIFICATION_BEFORE      INTEGER, ADD  NOTIFICATION_EVERY         	INTEGER ;
	
/************************************************************************************************************************/
ALTER TABLE GBS.MEMBER_HISTORY
ADD NOTIFICATION_BEFORE        	INTEGER,
ADD NOTIFICATION_EVERY         	INTEGER ;
	
/************************************************************************************************************************/
ALTER TABLE GBS.MEMBER_HISTORY
ADD NOTIFICATION_TYPE	VARCHAR(255) ;
	
/************************************************************************************************************************/
ALTER TABLE GBS.BOARD_HISTORY
ADD NOTIFICATION_DATE	TIMESTAMP ;

/************************************************************************************************************************/
ALTER TABLE GBS.MEMBER_HISTORY
ADD NOTIFICATION_DATE	TIMESTAMP ;

/************************************************************************************************************************/

ALTER TABLE GBS.NOTIFICATION
ADD MEMBER_ID        	INTEGER,
ADD    NOTIFICATION_TYPE	VARCHAR(255);
------------------------------------------------------------------------------VIEWS----------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW GBS.BOARDS AS
select BOARD.BOARD_ID, BOARD.BOARD_NAME, BOARD.BOARD_NAME_NORMALIZED, BOARD.PARENT_BOARD_ID ,BOARD.BOARD_TYPE_ID , BOARD_TYPE.BOARD_TYPE_NAME , BOARD_TYPE.GOVERNMENT_BOARD_TYPE_ID ,STATUS.
    STATUS_ID, STATUS.STATUS_NAME,BOARD.BOARD_START_DATE,
    BOARD.BOARD_EXPIRY_DATE, BOARD.CREATED_BY as 
    BOARD_CREATED_BY, BOARD.CREATED_ON as BOARD_CREATED_ON, BOARD.UPDATED_BY as 
    BOARD_UPDATED_BY, BOARD.UPDATED_ON as BOARD_UPDATED_ON, SOURCE_ORGANIZATION.ORGANIZATION_ID AS SOURCE_ORGANIZATION_ID, 
    SOURCE_ORGANIZATION.ORGANIZATION_NAME AS SOURCE_ORGANIZATION_NAME, SOURCE_ORGANIZATION.ORGANIZATION_NAME_NORMALIZED AS SOURCE_ORGANIZATION_NAME_NORMALIZED,
    BOARD.NOTIFICATION_BEFORE , BOARD.NOTIFICATION_EVERY
from GBS.BOARD BOARD 
        inner join GBS.ORGANIZATION SOURCE_ORGANIZATION 
        on BOARD.SOURCE_ORGANIZATION_ID = SOURCE_ORGANIZATION.ORGANIZATION_ID 
        inner join GBS.STATUS STATUS 
        on STATUS.STATUS_ID = BOARD.STATUS_ID
        INNER JOIN GBS.BOARD_TYPE  BOARD_TYPE ON BOARD_TYPE.BOARD_TYPE_ID = BOARD.BOARD_TYPE_ID ;
		
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.DECREES AS
select DECREE.DECREE_ID,
  DECREE.DECREE_NUMBER,
  DECREE.DECREE_YEAR,
  DECREE.DECREE_DESCRIPTION,
  DECREE.CREATED_BY,
  DECREE.CREATED_ON,
  DECREE.UPDATED_BY,
  DECREE.UPDATED_ON,
  DECREE.DECREE_DESCRIPTION_NORMALIZE,
  DECREE.DECREE_TYPE_ID,
  DECREE_TYPE.DECREE_TYPE_NAME,
  DECREE_TYPE.DECREE_TYPE_NAME_NORMALIZED 
from GBS.DECREE DECREE 
    inner join GBS.DECREE_TYPE DECREE_TYPE 
    on DECREE.DECREE_TYPE_ID = DECREE_TYPE.DECREE_TYPE_ID ;
	
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.BOARD_PRIMARY_DESTINATION_ORGANIZATION AS
SELECT
ORGANIZATION_NAME , BDO.BOARD_ID , BDO.DESTINATION_ORGANIZATION_ID
FROM GBS.ORGANIZATION INNER JOIN GBS.BOARD_DESTINATION_ORGANIZATION   BDO
ON BDO.DESTINATION_ORGANIZATION_ID = ORGANIZATION.ORGANIZATION_ID
WHERE
ORGANIZATION_TYPE_ID = (SELECT ORGANIZATION_TYPE_ID FROM GBS.ORGANZIATION_TYPE WHERE LOWER(ORGANIZATION_TYPE_NAME) = LOWER('Destination')) AND
BDO.PRIMARY_ORGANIZATION = 1 ;

/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.BOARDS_DECREES_ATTACHMENTS AS
select BOARDS.BOARD_ID,
  BOARDS.BOARD_NAME,
  BOARDS.BOARD_NAME_NORMALIZED,
  BOARDS.BOARD_TYPE_ID,
  BOARDS.BOARD_TYPE_NAME,
  BOARDS.GOVERNMENT_BOARD_TYPE_ID,
  BOARDS.STATUS_ID,
  BOARDS.STATUS_NAME,
  BOARDS.BOARD_START_DATE,
  BOARDS.BOARD_EXPIRY_DATE,
  BOARDS.BOARD_CREATED_BY,
  BOARDS.BOARD_CREATED_ON,
  BOARDS.BOARD_UPDATED_BY,
  BOARDS.BOARD_UPDATED_ON,
  BOARDS.SOURCE_ORGANIZATION_ID,
  BOARDS.SOURCE_ORGANIZATION_NAME,
  BOARDS.SOURCE_ORGANIZATION_NAME_NORMALIZED,
  DECREE.DECREE_ID,
  DECREE.DECREE_NUMBER,
  DECREE.DECREE_YEAR,
  DECREE.DECREE_TYPE_ID,
  (SELECT DT.DECREE_TYPE_NAME FROM GBS.DECREE_TYPE DT WHERE DT.DECREE_TYPE_ID = DECREE.DECREE_TYPE_ID) AS DECREE_TYPE_NAME,
  DECREE.DECREE_DESCRIPTION,
  DECREE.DECREE_DESCRIPTION_NORMALIZE,
  DECREE.ISSUE_DATE_MELADY,
  DECREE.ISSUE_DATE_HIGRY,
  ATTACHMENT.ATTACHMENT_ID,
  ATTACHMENT.ATTACHMENT_NAME,
  ATTACHMENT.ATTACHMENT_NAME_NORMALIZED,
  ATTACHMENT.ATTACHMENT_MIME,
  ATTACHMENT.ATTACHMENT_SIZE,
  ATTACHMENT.ATTACHMENT_TYPE_ID,
  ATTACHMENT.CREATED_ON,
 (SELECT ORGANIZATION_NAME FROM GBS.BOARD_PRIMARY_DESTINATION_ORGANIZATION DESO WHERE DESO.BOARD_ID = BOARDS.BOARD_ID ) AS PRIMARY_DESTINATION_ORGANIZATION

FROM GBS.BOARDS BOARDS 
LEFT OUTER JOIN GBS.BOARD_DECREE BOARD_DECREE 
ON BOARDS.BOARD_ID = BOARD_DECREE.BOARD_ID
LEFT OUTER JOIN GBS.DECREE DECREE 
on BOARD_DECREE.DECREE_ID = DECREE.DECREE_ID 
LEFT OUTER JOIN GBS.ATTACHMENT ATTACHMENT
ON DECREE.DECREE_ID = ATTACHMENT.DECREE_ID ;

/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.ORGANIZATIONS AS
select ORGANIZATION.ORGANIZATION_ID,
  ORGANIZATION.ORGANIZATION_NAME,
  ORGANIZATION.ORGANIZATION_NAME_NORMALIZED,
  ORGANIZATION.ORGANIZATION_TYPE_ID,
  ORGANZIATION_TYPE.ORGANIZATION_TYPE_NAME,
  ORGANZIATION_TYPE.ORGANIZATION_TYPE_DESCRIPTION,
  ORGANIZATION.CREATED_BY,
  ORGANIZATION.CREATED_ON,
  ORGANIZATION.UPDATED_BY,
  ORGANIZATION.UPDATED_ON 
from GBS.ORGANIZATION ORGANIZATION 
    inner join GBS.ORGANZIATION_TYPE ORGANZIATION_TYPE 
    on ORGANIZATION.ORGANIZATION_TYPE_ID = ORGANZIATION_TYPE.ORGANIZATION_TYPE_ID ;
	
/************************************************************************************************************************/

CREATE OR REPLACE VIEW GBS.MEMBERS AS
select MEMBER.MEMBER_ID,
  MEMBER.CPR_NUMBER,
  MEMBER.BOARD_ID,
  BOARD.BOARD_NAME,
  BOARD.BOARD_NAME_NORMALIZED,
  MEMBER.MEMBER_NAME,
  MEMBER.MEMBER_NAME_NORMALIZED,
  MEMBER.MEMBER_OCCUPATION,
  MEMBER.MEMBER_OCCUPATION_NORMLIZED,
  MEMBER.MEMBER_START_DATE,
  MEMBER.MEMBER_END_DATE,
  MEMBER.STATUS_ID,
  MEMBER.NOTIFICATION_BEFORE,
  MEMBER.NOTIFICATION_EVERY,
  STATUS.STATUS_NAME,
  ORGANIZATIONS.ORGANIZATION_ID,
  ORGANIZATIONS.ORGANIZATION_NAME,
  ORGANIZATIONS.ORGANIZATION_NAME_NORMALIZED,
  ORGANIZATION_OBF.ORGANIZATION_ID      ORGANIZATION_ID_OBF,
  ORGANIZATION_OBF.ORGANIZATION_NAME    ORGANIZATION_NAME_OBF,
  ORGANIZATION_OBF.ORGANIZATION_NAME_NORMALIZED   ORGANIZATION_NAME_NORMALIZED_OBF,
  ROLE.ROLE_ID,
  ROLE.ROLE_NAME,
  MEMBER.CREATED_BY MEMBER_CREATED_BY,
  MEMBER.CREATED_ON MEMBER_CREATED_ON,
  MEMBER.UPDATED_ON MEMBER_UPDATED_ON,
  MEMBER.UPDATED_BY MEMBER_UPDATED_BY 
from GBS.MEMBER MEMBER 
    INNER JOIN GBS.STATUS STATUS ON  MEMBER.STATUS_ID = STATUS.STATUS_ID
    LEFT OUTER JOIN GBS.ROLE ROLE ON  ROLE.ROLE_ID = MEMBER.ROLE_ID 
    LEFT OUTER JOIN GBS.ORGANIZATIONS ORGANIZATIONS ON ORGANIZATIONS.ORGANIZATION_ID = MEMBER.ORGANIZATION_ID
    LEFT OUTER JOIN GBS.ORGANIZATIONS ORGANIZATION_OBF ON ORGANIZATION_OBF.ORGANIZATION_ID = MEMBER.ORGANIZATION_ON_BEHALF_ID
    INNER JOIN GBS.BOARD BOARD ON BOARD.BOARD_ID = MEMBER.BOARD_ID ;
/************************************************************************************************************************/

CREATE OR REPLACE VIEW GBS.MEMBERS_DECREES AS 
select MEMBERS.MEMBER_ID,
  MEMBERS.BOARD_ID,
  MEMBERS.BOARD_NAME,
  MEMBERS.BOARD_NAME_NORMALIZED,
  MEMBERS.MEMBER_NAME,
  MEMBERS.MEMBER_NAME_NORMALIZED,
  MEMBERS.MEMBER_OCCUPATION,
  MEMBERS.MEMBER_OCCUPATION_NORMLIZED,
  MEMBERS.MEMBER_START_DATE,
  MEMBERS.MEMBER_END_DATE,
  MEMBERS.STATUS_ID MEMBER_STATUS_ID,
  MEMBERS.STATUS_NAME,
  MEMBERS.ORGANIZATION_ID,
  MEMBERS.ORGANIZATION_NAME,
  MEMBERS.ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.MEMBER_CREATED_BY,
  MEMBERS.MEMBER_CREATED_ON,
  MEMBERS.MEMBER_UPDATED_ON,
  MEMBERS.MEMBER_UPDATED_BY,
  DECREE.DECREE_ID,
  DECREE.DECREE_NUMBER,
  DECREE.DECREE_YEAR,
  DECREE.DECREE_DESCRIPTION,
  DECREE.DECREE_DESCRIPTION_NORMALIZE 

from GBS.DECREE DECREE 
    inner join GBS.MEMBER_DECREE MEMBER_DECREE 
    on DECREE.DECREE_ID = MEMBER_DECREE.DECREE_ID 
    inner join GBS.MEMBERS MEMBERS 
    on MEMBER_DECREE.MEMBER_ID = MEMBERS.MEMBER_ID ;
	
/************************************************************************************************************************/

CREATE OR REPLACE VIEW GBS.BOARDS_MEMBERS AS
select BOARDS.BOARD_ID,
  BOARDS.BOARD_NAME,
  BOARDS.BOARD_NAME_NORMALIZED,
  BOARDS.STATUS_ID BOARD_STATUS_ID,
  BOARDS.STATUS_NAME BOARD_STATUS_NAME,
  BOARDS.BOARD_EXPIRY_DATE,
  BOARDS.BOARD_CREATED_ON,
  BOARDS.BOARD_UPDATED_BY,
  BOARDS.BOARD_UPDATED_ON,
  BOARDS.SOURCE_ORGANIZATION_ID,
  BOARDS.SOURCE_ORGANIZATION_NAME,
  BOARDS.SOURCE_ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.MEMBER_ID,
  MEMBERS.MEMBER_NAME,
  MEMBERS.MEMBER_NAME_NORMALIZED,
  MEMBERS.MEMBER_OCCUPATION,
  MEMBERS.MEMBER_OCCUPATION_NORMLIZED,
  MEMBERS.MEMBER_START_DATE,
  MEMBERS.MEMBER_END_DATE,
  MEMBERS.STATUS_ID MEMBER_STATUS_ID,
  MEMBERS.STATUS_NAME MEMBER_STATUS_NAME,
  MEMBERS.ORGANIZATION_ID MEMBER_ORGANIZATION_ID,
  MEMBERS.ORGANIZATION_NAME MEMBER_ORGANIZATION_NAME,
  MEMBERS.ORGANIZATION_NAME_NORMALIZED MEMBER_ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.ROLE_ID,
  MEMBERS.ROLE_NAME,
  MEMBERS.MEMBER_CREATED_BY,
  MEMBERS.MEMBER_CREATED_ON,
  MEMBERS.MEMBER_UPDATED_ON,
  MEMBERS.MEMBER_UPDATED_BY 
from GBS.BOARDS BOARDS 
    inner join GBS.MEMBERS MEMBERS 
    on BOARDS.BOARD_ID = MEMBERS.BOARD_ID ;
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.NOTIFICATIONS AS 
SELECT
	NOTIFICATION.NOTIFICATION_ID,
    NOTIFICATION.BOARD_ID,
    NOTIFICATION.ACTUAL_DATE,
    NOTIFICATION.REPEAT_EVERY,
    NOTIFICATION.LAST_RUN_DATE,
    NOTIFICATION.NOTIFICATION_DATE,
    NOTIFICATION.MEMBER_ID,
    NOTIFICATION.NOTIFICATION_TYPE,
    SUBSCRIBER.SUBSCRIBER_EMAIL
FROM
	GBS.NOTIFICATION NOTIFICATION 
		INNER JOIN GBS.SUBSCRIBER SUBSCRIBER
		ON  NOTIFICATION.NOTIFICATION_ID = SUBSCRIBER.NOTIFICATION_ID ;
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.BOARDS_NOTIFICATIONS 
AS
select BOARDS.BOARD_ID,
  BOARDS.BOARD_NAME,
  BOARDS.BOARD_NAME_NORMALIZED,
  BOARDS.PARENT_BOARD_ID,
  BOARDS.BOARD_TYPE_ID,
  BOARDS.BOARD_TYPE_NAME,
  BOARDS.STATUS_ID,
  BOARDS.STATUS_NAME,
  BOARDS.SOURCE_ORGANIZATION_NAME,
  BOARDS.SOURCE_ORGANIZATION_ID,
  BOARDS.BOARD_EXPIRY_DATE,
  BOARDS.BOARD_START_DATE,
  NOTIFICATIONS.ACTUAL_DATE,
  NOTIFICATIONS.NOTIFICATION_ID,
  NOTIFICATIONS.LAST_RUN_DATE,
  NOTIFICATIONS.REPEAT_EVERY,
  NOTIFICATIONS.NOTIFICATION_DATE 
from GBS.BOARDS BOARDS 
    inner join GBS.NOTIFICATIONS NOTIFICATIONS 
    on BOARDS.BOARD_ID = NOTIFICATIONS.BOARD_ID ;
/************************************************************************************************************************/
	
CREATE OR REPLACE VIEW GBS.GROUP_SYSTEM_ROLES as
select
	GRO.GROUP_ID,
	GRO.GROUP_NAME,
	ROLE.SYSTEM_ROLE_ID,
	ROLE.SYSTEM_ROLE_NAME,
	GRO.CREATED_BY GROUP_CREATED_BY,
	GRO.CREATED_ON GROUP_CREATED_ON,
	GRO.UPDATED_BY GROUP_UPDATED_BY,
	GRO.UPDATED_ON GROUP_UPDATED_ON,
	ROLE.CREATED_BY  ROLE_CREATED_BY,
	ROLE.CREATED_ON  ROLE_CREATED_ON,
	ROLE.UPDATED_BY  ROLE_UPDATED_BY,
	ROLE.UPDATED_ON  ROLE_UPDATED_ON 
from
	GBS.GROUP_SYSTEM_ROLE GROUP_ROLE 
		inner join GBS.SYSTEM_ROLE ROLE 
		on GROUP_ROLE.SYSTEM_ROLE_ID = ROLE.SYSTEM_ROLE_ID 
			inner join GBS.GROUP GRO 
			on GRO.GROUP_ID = GROUP_ROLE.GROUP_ID ;
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.USER_GROUPS AS
select
	USERR.USER_ID,
	USERR.USER_NAME,
	USERR.EMAIL,
	USERR.PASSWORD,
	USERR.CREATED_BY  USER_CREATED_BY,
	USERR.CREATED_ON  USER_CREATED_ON,
	USERR.UPDATED_ON  USER_UPDATED_ON,
	USERR.UPDATED_BY  USER_UPDATED_BY,
	GRO.GROUP_NAME,
	GRO.GROUP_ID,
	GRO.CREATED_BY  GROUP_CREATED_BY,
	GRO.CREATED_ON  GROUP_CREATED_ON,
	GRO.UPDATED_BY  GROUP_UPDATED_BY,
	GRO.UPDATED_ON  GROUP_UPDATED_ON
from
	GBS.USER_GROUP USER_GROUP 
		inner join GBS.GROUP GRO
		on USER_GROUP.GROUP_ID = GRO.GROUP_ID 
			inner join GBS.USER USERR 
			on USERR.USER_ID = USER_GROUP.USER_ID ;
			




/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.MEMBERS_DECREES AS 
select MEMBERS.MEMBER_ID,
  MEMBERS.BOARD_ID,
  MEMBERS.BOARD_NAME,
  MEMBERS.BOARD_NAME_NORMALIZED,
  MEMBERS.MEMBER_NAME,
  MEMBERS.MEMBER_NAME_NORMALIZED,
  MEMBERS.MEMBER_OCCUPATION,
  MEMBERS.MEMBER_OCCUPATION_NORMLIZED,
  MEMBERS.MEMBER_START_DATE,
  MEMBERS.MEMBER_END_DATE,
  MEMBERS.STATUS_ID MEMBER_STATUS_ID,
  MEMBERS.STATUS_NAME,
  MEMBERS.ORGANIZATION_ID,
  MEMBERS.ORGANIZATION_NAME,
  MEMBERS.ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.MEMBER_CREATED_BY,
  MEMBERS.MEMBER_CREATED_ON,
  MEMBERS.MEMBER_UPDATED_ON,
  MEMBERS.MEMBER_UPDATED_BY,
  DECREE.DECREE_ID,
  DECREE.DECREE_NUMBER,
  DECREE.DECREE_YEAR,
  DECREE.DECREE_DESCRIPTION,
  DECREE.DECREE_DESCRIPTION_NORMALIZE ,
  DECREE.DECREE_TYPE_ID,
  ATTACHMENT.ATTACHMENT_ID

from GBS.DECREE DECREE 
    inner join GBS.MEMBER_DECREE MEMBER_DECREE 
    on DECREE.DECREE_ID = MEMBER_DECREE.DECREE_ID 
    inner join GBS.MEMBERS MEMBERS 
    on MEMBER_DECREE.MEMBER_ID = MEMBERS.MEMBER_ID
  LEFT OUTER JOIN GBS.ATTACHMENT ATTACHMENT
ON DECREE.DECREE_ID = ATTACHMENT.DECREE_ID ;

/************************************************************************************************************************/
CREATE or REPLACE VIEW GBS.BOARDS_MEMBERS AS
select BOARDS.BOARD_ID,
  BOARDS.BOARD_NAME,
  BOARDS.BOARD_NAME_NORMALIZED,
  BOARDS.STATUS_ID BOARD_STATUS_ID,
  BOARDS.STATUS_NAME BOARD_STATUS_NAME,
  BOARDS.BOARD_EXPIRY_DATE,
  BOARDS.BOARD_CREATED_ON,
  BOARDS.BOARD_UPDATED_BY,
  BOARDS.BOARD_UPDATED_ON,
  BOARDS.SOURCE_ORGANIZATION_ID,
  BOARDS.SOURCE_ORGANIZATION_NAME,
  BOARDS.SOURCE_ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.MEMBER_ID,
  MEMBERS.MEMBER_NAME,
  MEMBERS.MEMBER_NAME_NORMALIZED,
  MEMBERS.MEMBER_OCCUPATION,
  MEMBERS.MEMBER_OCCUPATION_NORMLIZED,
  MEMBERS.MEMBER_START_DATE,
  MEMBERS.MEMBER_END_DATE,
  MEMBERS.STATUS_ID MEMBER_STATUS_ID,
  MEMBERS.STATUS_NAME MEMBER_STATUS_NAME,
  MEMBERS.ORGANIZATION_ID MEMBER_ORGANIZATION_ID,
  MEMBERS.ORGANIZATION_NAME MEMBER_ORGANIZATION_NAME,
  MEMBERS.ORGANIZATION_NAME_NORMALIZED MEMBER_ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.ROLE_ID,
  MEMBERS.ROLE_NAME,
  MEMBERS.MEMBER_CREATED_BY,
  MEMBERS.MEMBER_CREATED_ON,
  MEMBERS.MEMBER_UPDATED_ON,
  MEMBERS.MEMBER_UPDATED_BY,
  MEMBERS.NOTIFICATION_BEFORE,
  MEMBERS.NOTIFICATION_EVERY
from GBS.BOARDS BOARDS 
    inner join GBS.MEMBERS MEMBERS 
    on BOARDS.BOARD_ID = MEMBERS.BOARD_ID ;
	
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.BOARDS_NOTIFICATIONS 
AS
select BOARDS.BOARD_ID,
  BOARDS.BOARD_NAME,
  BOARDS.BOARD_NAME_NORMALIZED,
  BOARDS.PARENT_BOARD_ID,
  BOARDS.BOARD_TYPE_ID,
  BOARDS.BOARD_TYPE_NAME,
  BOARDS.STATUS_ID,
  BOARDS.STATUS_NAME,
  BOARDS.SOURCE_ORGANIZATION_NAME,
  BOARDS.SOURCE_ORGANIZATION_ID,
  BOARDS.BOARD_EXPIRY_DATE,
  BOARDS.BOARD_START_DATE,
  NOTIFICATIONS.ACTUAL_DATE,
  NOTIFICATIONS.NOTIFICATION_ID,
  NOTIFICATIONS.LAST_RUN_DATE,
  NOTIFICATIONS.REPEAT_EVERY,
  NOTIFICATIONS.NOTIFICATION_DATE,
  NOTIFICATIONS.MEMBER_ID,
  NOTIFICATIONS.NOTIFICATION_TYPE
from GBS.BOARDS BOARDS 
    inner join GBS.NOTIFICATIONS NOTIFICATIONS 
    on BOARDS.BOARD_ID = NOTIFICATIONS.BOARD_ID ;
	
/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.MEMBERS_DECREES AS 
select MEMBERS.MEMBER_ID,
  MEMBERS.BOARD_ID,
  MEMBERS.BOARD_NAME,
  MEMBERS.BOARD_NAME_NORMALIZED,
  MEMBERS.MEMBER_NAME,
  MEMBERS.MEMBER_NAME_NORMALIZED,
  MEMBERS.MEMBER_OCCUPATION,
  MEMBERS.MEMBER_OCCUPATION_NORMLIZED,
  MEMBERS.MEMBER_START_DATE,
  MEMBERS.MEMBER_END_DATE,
  MEMBERS.STATUS_ID MEMBER_STATUS_ID,
  MEMBERS.STATUS_NAME,
  MEMBERS.ORGANIZATION_ID,
  MEMBERS.ORGANIZATION_NAME,
  MEMBERS.ORGANIZATION_NAME_NORMALIZED,
  MEMBERS.MEMBER_CREATED_BY,
  MEMBERS.MEMBER_CREATED_ON,
  MEMBERS.MEMBER_UPDATED_ON,
  MEMBERS.MEMBER_UPDATED_BY,
  DECREE.DECREE_ID,
  DECREE.DECREE_NUMBER,
  DECREE.DECREE_YEAR,
  DECREE.DECREE_DESCRIPTION,
  DECREE.DECREE_DESCRIPTION_NORMALIZE ,
  DECREE.DECREE_TYPE_ID,
  ATTACHMENT.ATTACHMENT_ID,
  ATTACHMENT.ATTACHMENT_TYPE_ID

from GBS.DECREE DECREE 
    inner join GBS.MEMBER_DECREE MEMBER_DECREE 
    on DECREE.DECREE_ID = MEMBER_DECREE.DECREE_ID 
    inner join GBS.MEMBERS MEMBERS 
    on MEMBER_DECREE.MEMBER_ID = MEMBERS.MEMBER_ID
  LEFT OUTER JOIN GBS.ATTACHMENT ATTACHMENT
ON DECREE.DECREE_ID = ATTACHMENT.DECREE_ID ;

/************************************************************************************************************************/
CREATE OR REPLACE VIEW GBS.BOARDS_MEMBERS_NOTIFICATIONS 
AS
select 
  MEMBER.MEMBER_NAME,
  MEMBER.MEMBER_ID,
  MEMBER.ROLE_NAME,
  MEMBER.MEMBER_END_DATE,
  BOARD.BOARD_ID,
  BOARD.BOARD_NAME,
  BOARD.BOARD_NAME_NORMALIZED,
  BOARD.PARENT_BOARD_ID,
  BOARD.BOARD_TYPE_ID,
  BOARD.BOARD_TYPE_NAME,
  BOARD.STATUS_ID,
  BOARD.STATUS_NAME,
  BOARD.SOURCE_ORGANIZATION_NAME,
  BOARD.SOURCE_ORGANIZATION_ID,
  BOARD.BOARD_EXPIRY_DATE,
  BOARD.BOARD_START_DATE,
  NOTIFICATIONS.ACTUAL_DATE,
  NOTIFICATIONS.NOTIFICATION_ID,
  NOTIFICATIONS.LAST_RUN_DATE,
  NOTIFICATIONS.REPEAT_EVERY,
  NOTIFICATIONS.NOTIFICATION_DATE,
  NOTIFICATIONS.NOTIFICATION_TYPE,
  NOTIFICATIONS.SUBSCRIBER_EMAIL
from GBS.NOTIFICATIONS NOTIFICATIONS 
left join GBS.MEMBERS MEMBER on NOTIFICATIONS.MEMBER_ID = MEMBER.MEMBER_ID 
left join  GBS.BOARDS BOARD on NOTIFICATIONS.BOARD_ID = BOARD.BOARD_ID ;
/************************************************************************************************************************/

CREATE OR REPLACE VIEW GBS.BOARDS_ATTACHMENTS
AS
 SELECT BOARDS.BOARD_ID,
    BOARDS.BOARD_NAME,
    BOARDS.BOARD_NAME_NORMALIZED,
    BOARDS.BOARD_TYPE_ID,
    BOARDS.BOARD_TYPE_NAME,
    BOARDS.GOVERNMENT_BOARD_TYPE_ID,
    BOARDS.STATUS_ID,
    BOARDS.STATUS_NAME,
    BOARDS.BOARD_START_DATE,
    BOARDS.BOARD_EXPIRY_DATE,
    BOARDS.BOARD_CREATED_BY,
    BOARDS.BOARD_CREATED_ON,
    BOARDS.BOARD_UPDATED_BY,
    BOARDS.BOARD_UPDATED_ON,
    BOARDS.SOURCE_ORGANIZATION_ID,
    BOARDS.SOURCE_ORGANIZATION_NAME,
    BOARDS.SOURCE_ORGANIZATION_NAME_NORMALIZED,
    DECREE.DECREE_ID,
    DECREE.DECREE_NUMBER,
    DECREE.DECREE_YEAR,
    DECREE.DECREE_TYPE_ID,
    ( SELECT DT.DECREE_TYPE_NAME
           FROM GBS.DECREE_TYPE DT
          WHERE (DT.DECREE_TYPE_ID = DECREE.DECREE_TYPE_ID)) AS DECREE_TYPE_NAME,
    DECREE.DECREE_DESCRIPTION,
    DECREE.DECREE_DESCRIPTION_NORMALIZE,
    DECREE.ISSUE_DATE_MELADY,
    DECREE.ISSUE_DATE_HIGRY,
    ATTACHMENT.ATTACHMENT_ID,
    ATTACHMENT.ATTACHMENT_NAME,
    ATTACHMENT.ATTACHMENT_NAME_NORMALIZED,
    ATTACHMENT.ATTACHMENT_MIME,
    ATTACHMENT.ATTACHMENT_SIZE,
    ATTACHMENT.ATTACHMENT_TYPE_ID,
    ATTACHMENT.CREATED_ON,
    ( SELECT DESO.ORGANIZATION_NAME
           FROM GBS.BOARD_PRIMARY_DESTINATION_ORGANIZATION DESO
          WHERE (DESO.BOARD_ID = BOARDS.BOARD_ID)) AS PRIMARY_DESTINATION_ORGANIZATION
   FROM GBS.BOARDS BOARDS
   INNER JOIN GBS.ATTACHMENT ATTACHMENT ON BOARDS.BOARD_ID = ATTACHMENT.BOARD_ID
   LEFT JOIN GBS.DECREE DECREE ON ATTACHMENT.DECREE_ID = DECREE.DECREE_ID;

   COMMIT;



